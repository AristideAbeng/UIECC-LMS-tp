/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interface1;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.event.ListSelectionListener;
import lmsschoolproject.CD;
import lmsschoolproject.Emprunt;
import lmsschoolproject.Etudiant;
import lmsschoolproject.LibraryItem;
import lmsschoolproject.Livre;
import lmsschoolproject.ResearchMaterial;
import lmsschoolproject.Utilisateur;
/**
 *
 * @author KIBITI Wen Life
 */
public class FenetreEmprunter extends javax.swing.JFrame {
    private Utilisateur utilisateur;
    private LibraryItem ressourceEmprunter;
    private String typeRessource;
    String typeUsager;
    /**
     * Creates new form FenetreEmprunter
     */
    public FenetreEmprunter() {
        initComponents();
        this.btn_choisir_emprunt.setEnabled(false);
        this.btn_ConfirmerEnprunt.setEnabled(false);
        this.panel_Emprunts_NonRembourse.setLayout(new BorderLayout());
        this.lbl_emprunt_interdit.setVisible(false);
        
         //definir un Jlist qui va contenir tout les livres en recevant la liste cree par la methode creerListeLivres.
        
        
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cbbx_SelectionTypeUsager = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txt_identifiant_usager = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_choisir_emprunt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel_Emprunts_NonRembourse = new javax.swing.JPanel();
        btn_ConfirmerEnprunt = new javax.swing.JButton();
        btn_annuler = new javax.swing.JButton();
        btn_verifierIdentifiant = new javax.swing.JButton();
        lbl_image_livre_choisie = new javax.swing.JLabel();
        lbl_titre_livre_choisie = new javax.swing.JLabel();
        lbl_auteur_livre_choisie = new javax.swing.JLabel();
        lbl_edition_livre_choisie = new javax.swing.JLabel();
        lbl_emprunt_interdit = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setText("Type Utilisateur");

        cbbx_SelectionTypeUsager.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Etudiant", "Enseignant" }));

        jLabel1.setText("identifiant");

        jLabel2.setText("Emprunts Non Rembourses");

        jLabel3.setText("selectioner la ressource a emprunter");

        btn_choisir_emprunt.setText("choisir");
        btn_choisir_emprunt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_choisir_empruntMouseClicked(evt);
            }
        });
        btn_choisir_emprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_choisir_empruntActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_Emprunts_NonRembourseLayout = new javax.swing.GroupLayout(panel_Emprunts_NonRembourse);
        panel_Emprunts_NonRembourse.setLayout(panel_Emprunts_NonRembourseLayout);
        panel_Emprunts_NonRembourseLayout.setHorizontalGroup(
            panel_Emprunts_NonRembourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 610, Short.MAX_VALUE)
        );
        panel_Emprunts_NonRembourseLayout.setVerticalGroup(
            panel_Emprunts_NonRembourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 381, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel_Emprunts_NonRembourse);

        btn_ConfirmerEnprunt.setText("confirmer Emprunt");
        btn_ConfirmerEnprunt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ConfirmerEnpruntMouseClicked(evt);
            }
        });
        btn_ConfirmerEnprunt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ConfirmerEnpruntActionPerformed(evt);
            }
        });

        btn_annuler.setText("annuler");
        btn_annuler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_annulerMouseClicked(evt);
            }
        });

        btn_verifierIdentifiant.setText("verifiier");
        btn_verifierIdentifiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_verifierIdentifiantMouseClicked(evt);
            }
        });

        lbl_emprunt_interdit.setBackground(new java.awt.Color(255, 255, 255));
        lbl_emprunt_interdit.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        lbl_emprunt_interdit.setForeground(new java.awt.Color(204, 0, 0));
        lbl_emprunt_interdit.setText("Cet Utilisateur N'est pas autorise a effectuer un nouvel Emprunt");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(btn_ConfirmerEnprunt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_annuler)
                .addGap(208, 208, 208))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(lbl_image_livre_choisie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_auteur_livre_choisie)
                            .addComponent(lbl_titre_livre_choisie)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txt_identifiant_usager, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(btn_verifierIdentifiant))
                            .addComponent(cbbx_SelectionTypeUsager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_choisir_emprunt)
                            .addComponent(lbl_edition_livre_choisie))
                        .addGap(157, 157, 157)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(503, 503, 503)
                        .addComponent(lbl_emprunt_interdit, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbx_SelectionTypeUsager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txt_identifiant_usager, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_verifierIdentifiant))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(btn_choisir_emprunt))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(lbl_titre_livre_choisie)
                                .addGap(35, 35, 35)
                                .addComponent(lbl_auteur_livre_choisie)
                                .addGap(40, 40, 40)
                                .addComponent(lbl_edition_livre_choisie))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(lbl_image_livre_choisie, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(lbl_emprunt_interdit)
                .addGap(76, 76, 76)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ConfirmerEnprunt)
                    .addComponent(btn_annuler))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_choisir_empruntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_choisir_empruntMouseClicked
      

    }//GEN-LAST:event_btn_choisir_empruntMouseClicked

    private void btn_verifierIdentifiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_verifierIdentifiantMouseClicked

         // TODO add your handling code here:
        String typeUsager = this.cbbx_SelectionTypeUsager.getSelectedItem().toString();
        String identifiantUsager = this.txt_identifiant_usager.getText();
        if(typeUsager.equals("Etudiant")){
            boolean validation = Etudiant.validerMatricule(identifiantUsager);
            if(validation){
                this.utilisateur = Etudiant.getEtudiant(identifiantUsager);
                this.typeUsager = typeUsager;
                 this.panel_Emprunts_NonRembourse.removeAll();
               
                JOptionPane.showMessageDialog(rootPane, "Identifiant valide");
                JList<Emprunt> emprunts = Etudiant.chercherEmpruntsEtudiant(identifiantUsager);
                if(emprunts.getModel().getSize() == 0){
                    System.out.println("no pending borrows");
                    this.panel_Emprunts_NonRembourse.add(new JLabel("          Aucun Emprunt non Rembourse"),BorderLayout.CENTER); 
                     this.panel_Emprunts_NonRembourse.setVisible(true);
                     this.panel_Emprunts_NonRembourse.revalidate();
                     this.panel_Emprunts_NonRembourse.repaint();
                         
                    this.btn_choisir_emprunt.setEnabled(true);
                this.btn_ConfirmerEnprunt.setEnabled(true);
                      
                }else{
                    System.out.println("Emprunts trouves");
                    Etudiant etudiant = Etudiant.getEtudiant(identifiantUsager);
                    if(Etudiant.validerPossibiliterNouvelEmpruntAvantSelection(etudiant)){
                         this.btn_choisir_emprunt.setEnabled(true);
                        this.btn_ConfirmerEnprunt.setEnabled(true);
                    }else{
                        this.lbl_emprunt_interdit.setVisible(true);
                    }
                    this.panel_Emprunts_NonRembourse.add(emprunts,BorderLayout.CENTER);
                     this.panel_Emprunts_NonRembourse.setVisible(true);
                     this.panel_Emprunts_NonRembourse.revalidate();
                     this.panel_Emprunts_NonRembourse.repaint();
                }
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "Identifiant INVALIDE");
            }
            
        }
    }//GEN-LAST:event_btn_verifierIdentifiantMouseClicked

    private void btn_ConfirmerEnpruntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ConfirmerEnpruntMouseClicked
        // TODO add your handling code here:
       
        
        
    }//GEN-LAST:event_btn_ConfirmerEnpruntMouseClicked

    private void btn_annulerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_annulerMouseClicked
        // TODO add your handling code here:
          // TODO add your handling code here:
       
    }//GEN-LAST:event_btn_annulerMouseClicked

    private void btn_choisir_empruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_choisir_empruntActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btn_choisir_empruntActionPerformed

    private void btn_ConfirmerEnpruntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ConfirmerEnpruntActionPerformed
        // TODO add your handling code here:
         if(this.typeUsager.equals("Etudiant")){
            Etudiant.Emprunter(this.ressourceEmprunter,this.typeRessource,(Etudiant)this.utilisateur);
            JOptionPane.showMessageDialog(rootPane, "Enregistrer Avec Success");
             this.btn_choisir_emprunt.setEnabled(false);
             this.btn_ConfirmerEnprunt.setEnabled(false);
             this.EffectuerVerificationContrainte();
            
        }
    }//GEN-LAST:event_btn_ConfirmerEnpruntActionPerformed
    public void getSelectedRessource(LibraryItem item,String type){
        
         // create List model
          DefaultListModel<Livre> model = new DefaultListModel<Livre>();
       // add item to model
       if(type.equals("livre")){
           this.ressourceEmprunter = item;
           this.typeRessource = type;
           Livre livre = (Livre) item;
             String path = "C:\\Users\\KIBITI Wen Life\\Documents\\NetBeansProjects\\LMSSchoolProject\\build\\images\\";
       
       //tout ceci pour redimensioner l'image
       BufferedImage img = null;
        try {
            img = ImageIO.read(new File(path+livre.nomImage));
            Image dimg = img.getScaledInstance(200,200,Image.SCALE_SMOOTH);
            ImageIcon imageIcon = new ImageIcon(dimg);
            this.lbl_image_livre_choisie.setIcon(imageIcon);
        } catch (IOException e) {
            e.printStackTrace();
        }
        this.lbl_auteur_livre_choisie.setText(livre.auteur);
        this.lbl_edition_livre_choisie.setText(livre.edition);
        this.lbl_titre_livre_choisie.setText(livre.titre);
         
         
          
       }
        
    }
    private void EffectuerVerificationContrainte(){
        this.lbl_auteur_livre_choisie.setText("");
        this.lbl_edition_livre_choisie.setText("");
        this.lbl_titre_livre_choisie.setText("");
        this.lbl_image_livre_choisie.setIcon(null);
         String typeUsager = this.cbbx_SelectionTypeUsager.getSelectedItem().toString();
        String identifiantUsager = this.txt_identifiant_usager.getText();
        if(typeUsager.equals("Etudiant")){
            boolean validation = Etudiant.validerMatricule(identifiantUsager);
            if(validation){
                this.utilisateur = Etudiant.getEtudiant(identifiantUsager);
                this.typeUsager = typeUsager;
                
               
                
                JList<Emprunt> emprunts = Etudiant.chercherEmpruntsEtudiant(identifiantUsager);
                if(emprunts.getModel().getSize() == 0){
                    System.out.println("no pending borrows");
                    this.panel_Emprunts_NonRembourse.removeAll();
                    this.panel_Emprunts_NonRembourse.add(new JLabel("          Aucun Emprunt non Rembourse"),BorderLayout.CENTER); 
                     this.panel_Emprunts_NonRembourse.setVisible(true);
                     this.panel_Emprunts_NonRembourse.revalidate();
                     this.panel_Emprunts_NonRembourse.repaint();
                    this.btn_choisir_emprunt.setEnabled(true);
                this.btn_ConfirmerEnprunt.setEnabled(true);
                      
                }else{
                    System.out.println("Emprunts trouves");
                    Etudiant etudiant = Etudiant.getEtudiant(identifiantUsager);
                    if(Etudiant.validerPossibiliterNouvelEmpruntAvantSelection(etudiant)){
                         this.btn_choisir_emprunt.setEnabled(true);
                        this.btn_ConfirmerEnprunt.setEnabled(true);
                    }else{
                        this.lbl_emprunt_interdit.setVisible(true);
                    }
                    this.panel_Emprunts_NonRembourse.add(emprunts,BorderLayout.CENTER);
                     this.panel_Emprunts_NonRembourse.setVisible(true);
                     this.panel_Emprunts_NonRembourse.revalidate();
                     this.panel_Emprunts_NonRembourse.repaint();
                }
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "Identifiant INVALIDE");
            }
            
        }
    }
    
     private static ListSelectionListener createEmpruntSelectionListener(JList list) {return null;
      /*
       // TODO add your handling code here:
        String typeUsager = this.cbbx_SelectionTypeUsager.getSelectedItem().toString();
        String identifiantUsager = this.txt_identifiant_usager.getText();
        if(typeUsager.equals("Etudiant")){
            boolean validation = Etudiant.validerMatricule(identifiantUsager);
            if(validation){
                this.btn_choisir_emprunt.setEnabled(true);
                JOptionPane.showMessageDialog(rootPane, "Identifiant valide");
                JList<Emprunt> emprunts = Etudiant.chercherEmpruntsEtudiant(identifiantUsager);
                if(emprunts.getModel().getSize() == 0){
                    System.out.println("no pending borrows");
                    this.panel_Emprunts_NonRembourse.add(new JLabel("          Aucun Emprunt non Rembourse"),BorderLayout.CENTER); 
                     this.panel_Emprunts_NonRembourse.setVisible(true);
                     this.panel_Emprunts_NonRembourse.revalidate();
                     this.panel_Emprunts_NonRembourse.repaint();
                   
                      
                }else{
                    this.panel_Emprunts_NonRembourse.add(emprunts,BorderLayout.CENTER);
                }
                
            }else{
                JOptionPane.showMessageDialog(rootPane, "Identifiant INVALIDE");
            }
        }
     return e -> {
          if (!e.getValueIsAdjusting()) {
              System.out.println(list.getSelectedValue());
              
              
              
        //instancier l'objet menu contextuel
       popup = new JPopupMenu();
        
        //ajouter des options au menu contextuel
        popup.add(new JMenuItem(new AbstractAction("details"){
                  @Override
                  public void actionPerformed(ActionEvent e) {
                      FenetreModifierLivre fenetre = new FenetreModifierLivre((Livre)list.getSelectedValue());
                      fenetre.setVisible(true);
                      
                  }
        }));
        popup.add(new JMenuItem(new AbstractAction("supprimer"){
                  @Override
                  public void actionPerformed(ActionEvent e) {
                        int option = JOptionPane.showConfirmDialog(null,"Voulez vous vraiment supprimer ce livre ?");
                        System.out.println(option);
                        if(option == 0){
                                try{

                                        Connection con = DBConnect.connect();
                                       String insertQuery = "DELETE FROM  livre WHERE Id = ?";

                                     PreparedStatement requeteInsertion = con.prepareStatement(insertQuery);
                                     Livre livre = (Livre)list.getSelectedValue();
                                      requeteInsertion.setInt(1,livre.id);


                                      requeteInsertion.execute();
                                      JOptionPane.showMessageDialog(null, "Suprimee avec success");

                                      con.close();
                              }catch(Exception exc){
                                  System.out.println(exc);
                              }
                        }
                  }
        }));
        
         popup.show(list,list.getMousePosition().x,list.getMousePosition().y);
          }
      };*/
      
  }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenetreEmprunter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenetreEmprunter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenetreEmprunter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenetreEmprunter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenetreEmprunter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ConfirmerEnprunt;
    private javax.swing.JButton btn_annuler;
    private javax.swing.JButton btn_choisir_emprunt;
    private javax.swing.JButton btn_verifierIdentifiant;
    private javax.swing.JComboBox<String> cbbx_SelectionTypeUsager;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_auteur_livre_choisie;
    private javax.swing.JLabel lbl_edition_livre_choisie;
    private javax.swing.JLabel lbl_emprunt_interdit;
    private javax.swing.JLabel lbl_image_livre_choisie;
    private javax.swing.JLabel lbl_titre_livre_choisie;
    private javax.swing.JPanel panel_Emprunts_NonRembourse;
    private javax.swing.JTextField txt_identifiant_usager;
    // End of variables declaration//GEN-END:variables
}
